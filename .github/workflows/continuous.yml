name: continuous

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Quality Gates
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # install node version from .nvmrc
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      # install deps
      - name: Install Dependencies
        run: npm ci

      # lint all packages
      - name: Lint All Packages
        run: npm run lint

      # build all packages
      - name: Build All Packages
        run: npm run build

      # verify generated bundle sizes for all packages
      - name: Verify Bundle Sizes
        run: npm run verify:bundle-size

      # run unit tests and generate test coverage for all packages
      - name: Test All Packages
        run: npm run test:coverage

      # upload @videojs/hls-parser test coverage to codecov
      - name: Upload Hls-Parser Coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: hls-parser
          files: ./packages/hls-parser/coverage/coverage-final.json
          name: hls-parser-coverage
          fail_ci_if_error: true

      # upload @videojs/dash-parser test coverage to codecov
      - name: Upload Dash-Parser Coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: dash-parser
          files: ./packages/dash-parser/coverage/coverage-final.json
          name: dash-parser-coverage
          fail_ci_if_error: true

      # upload @videojs/playback test coverage to codecov
      - name: Upload Player Coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: playback
          files: ./packages/playback/coverage/coverage-final.json
          name: playback-coverage
          fail_ci_if_error: true

      # left a comment with urls
      - name: Left a comment with urls
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
                > [!NOTE]
                >
                > URLs will be available only after Netlify deploy is completed

                ### Preview
                https://deploy-preview-${context.issue.number}--videojsdev.netlify.app
                ### Api References
                https://deploy-preview-${context.issue.number}--videojsdev.netlify.app/api-reference/dash-parser
                https://deploy-preview-${context.issue.number}--videojsdev.netlify.app/api-reference/hls-parser
                https://deploy-preview-${context.issue.number}--videojsdev.netlify.app/api-reference/playback
                ### Demo
                https://deploy-preview-${context.issue.number}--videojsdev.netlify.app/demo/dash-parser
                https://deploy-preview-${context.issue.number}--videojsdev.netlify.app/demo/hls-parser
                https://deploy-preview-${context.issue.number}--videojsdev.netlify.app/demo/playback
            `
            })
